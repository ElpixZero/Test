{"version":3,"sources":["utils/constants.js","components/UserCard.jsx","components/LoadingIndicator.jsx","components/AddUser.jsx","components/TextField.jsx","components/ErrorMessage.jsx","utils/FetchWithTimeOut.js","components/Table.jsx","components/InitialScreen.jsx","App.js","index.js"],"names":["useStyles","makeStyles","root","marginTop","background","CONSTANTS","color","border","bullet","display","margin","transform","title","fontSize","marginRight","pos","marginBottom","StyledTypography","withStyles","Typography","UserCard","data","classes","Card","className","CardContent","style","padding","gutterBottom","firstName","lastName","description","address","city","state","streetAddress","zip","backgroundColor","theme","flexDirection","alignItems","justifyContent","marginLeft","spacing","LoadingIndicator","CircularProgress","id","AddUser","rows","addNewObj","React","useState","open","setOpen","email","phone","formValues","setFormValue","handleClose","Button","borderColor","variant","onClick","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","onSubmit","e","preventDefault","map","item","TextField","key","label","fullWidth","value","onChange","target","DialogActions","disabled","pointer","isButtonDisabled","type","CssTextField","StyledTextField","placeholder","defaultProps","ErrorMessage","children","textAlign","url","options","timeout","Promise","race","fetch","_","reject","setTimeout","Error","table","minWidth","headRows","createPaginationBreakpoints","per","dataLength","length","paginationBreakpoints","push","desc","a","b","orderBy","StyledTableCell","head","palette","common","black","body","TableCell","CreateTable","source","error","setError","filterInputs","setFilterInputs","setData","isLoading","setIsLoading","selectedTableObj","setSelectedTableObj","paginationCount","setPaginationCount","paginationPage","setPaginationPage","rule","sortOptions","setSortOptions","fetchData","FetchWithTimeOut","fetchResponse","ok","json","message","useEffect","maxWidth","TableContainer","component","Paper","paddingBottom","maxHeight","newObj","lastData","slice","unshift","bind","this","Table","taisRequiredble","aria-label","TableHead","TableRow","Close","cursor","lastRule","ArrowDownward","Edit","TableBody","pagValue","pageNumber","filter","paginateData","filterOptions","toString","toUpperCase","indexOf","filterData","el","index","sort","sortData","row","scope","align","TablePagination","rowsPerPageOptions","count","rowsPerPage","page","onChangePage","newPage","onChangeRowsPerPage","event","InitialScreen","setSource","ulrs","small","big","Fragment","CssBaseline","Container","ButtonGroup","boxShadow","size","THEME","createMuiTheme","typography","App","paddingTop","minHeight","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df812873.chunk.js","sourcesContent":["export default {\n  DESC: 'desc',\n  ASC: 'asc',\n  MAX_TIMEOUT_SECONDS: 30,\n  PRIMARY_COLOR: 'black',\n  SECONDARY_COLOR: 'yellow',\n  PLACEHOLDER_COLOR: '#f7f70269',\n  WARNING_COLOR: 'red',\n  SMALL_DATA_URL: 'https://gist.githubusercontent.com/ElpixZero/09c4b447ca9213c759ab3d167e815d19/raw/83cfb71e43315aa960bf9088d137e2b8e25d9db8/gistfile1.txt',\n  BIG_DATA_URL: 'https://gist.githubusercontent.com/ElpixZero/30f1fdaeb5446e1dfcc49cfdb3cef249/raw/79993d6bbc8449aec17e916e7660627cce81bdf5/gistfile1.txt',\n}","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {Card, CardContent, Typography} from '@material-ui/core';\n\nimport CONSTANTS from '../utils/constants';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 15,\n    background: CONSTANTS.PRIMARY_COLOR,\n    color: CONSTANTS.SECONDARY_COLOR,\n    border: `1px dashed ${CONSTANTS.SECONDARY_COLOR}`,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n    marginRight: 10\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst StyledTypography = withStyles(() => ({\n  root: {\n    color: CONSTANTS.PLACEHOLDER_COLOR,\n  },\n}))(Typography);\n\n\nfunction UserCard({data}) {\n  const classes = useStyles();\n\n  return (\n    <>\n    { data ? <Card className={classes.root}>\n      <CardContent style={{padding: '10px 15px 5px 15px'}}>\n        <div style={{display: 'flex'}}>\n          <StyledTypography className={classes.title} color=\"textSecondary\" gutterBottom>\n            Выбран пользователь: \n          </StyledTypography>\n          <Typography className={classes.title} gutterBottom>\n            <b> {data.firstName} {data.lastName}</b>\n          </Typography>\n        </div>\n\n        <div style={{display: 'flex'}}>\n          <StyledTypography className={classes.title} color=\"textSecondary\" gutterBottom>\n            Описание:\n          </StyledTypography>\n          <Typography className={classes.title} gutterBottom>\n            {data.description}\n          </Typography>\n        </div>\n\n        <div style={{display: 'flex'}}>\n          <StyledTypography className={classes.title} color=\"textSecondary\" gutterBottom>\n            Адрес проживания: \n          </StyledTypography>\n          <Typography className={classes.title} gutterBottom>\n            <b> {data.address.city}</b>\n          </Typography>\n        </div>\n\n        <div style={{display: 'flex'}}>\n          <StyledTypography className={classes.title} color=\"textSecondary\" gutterBottom>\n            Город:\n          </StyledTypography>\n          <Typography className={classes.title} gutterBottom>\n            <b>{data.address.state}</b>\n          </Typography>\n        </div>\n\n        <div style={{display: 'flex'}}>\n          <StyledTypography className={classes.title} color=\"textSecondary\" gutterBottom>\n            Провинция/штат:\n          </StyledTypography>\n          <Typography className={classes.title} gutterBottom>\n            <b>{data.address.streetAddress}</b>\n          </Typography>\n        </div>\n\n        <div style={{display: 'flex'}}>\n          <StyledTypography className={classes.title} color=\"textSecondary\" gutterBottom>\n            Индекс:\n          </StyledTypography>\n          <Typography className={classes.title} gutterBottom>\n            <b> {data.address.zip}</b>\n          </Typography>\n        </div>\n        </CardContent>\n    </Card>\n    : <div style={{backgroundColor: CONSTANTS.PRIMARY_COLOR, color: CONSTANTS.SECONDARY_COLOR, marginTop: 30}}>\n      * Кликните на строку таблицы, чтобы увидеть расширенную информацию о пользователе.\n    </div>\n  }\n  </>\n  );\n}\n\nUserCard.propTypes = {\n  data: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.object,\n  ]),\n}\n\nexport default UserCard;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport CONSTANTS from '../utils/constants'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    backgroundColor: CONSTANTS.PRIMARY_COLOR,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n    padding: '50px 0',\n    color: CONSTANTS.SECONDARY_COLOR,\n  },\n}));\n\nexport default function LoadingIndicator() {\n  const classes = useStyles();\n  \n  return (\n    <div className={classes.root}>\n      <CircularProgress style={{color: CONSTANTS.SECONDARY_COLOR, marginBottom: 20}} id=\"standard-basic\" />\n      <span>Загрузка данных для таблицы...</span>\n    </div>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\nimport CONSTANTS from '../utils/constants';\n\nfunction AddUser({rows, addNewObj}) {\n  const [open, setOpen] = React.useState(false);\n  const [formValues, setFormValue] = React.useState({\n    id: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    description: 'Вы создали нового пользователя. У него нет реального описания.',\n    address: {\n      city: 'Адрес проживания для созданного Вами пользователя',\n      state: 'Город для созданного Вами пользователя',\n      streetAddress: 'Провинция/штат для созданного Вами пользователя',\n      zip: 'Индекс для созданного Вами пользователя',\n    }\n  });\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    addNewObj(formValues);\n    \n    setFormValue({\n      id: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: ''\n    });\n  }\n\n  const isButtonDisabled = (data) => {\n    let pointer = false;\n\n    for (let key in data) {\n      if (data[key] === '') pointer =  true;\n    }\n\n    return pointer;\n  }\n\n  return (\n    <div>\n      <Button style={{background: CONSTANTS.PRIMARY_COLOR, color: CONSTANTS.SECONDARY_COLOR, borderColor: CONSTANTS.SECONDARY_COLOR}} variant=\"outlined\" onClick={handleClickOpen}>\n        Добавить\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Добавление пользователя</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Чтобы добавить пользователя, заполните все поля:\n          </DialogContentText>\n          <form onSubmit={onSubmit}>\n            {\n              rows.map( item => (\n                <TextField\n                  key={item}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  id={item}\n                  label={item}\n                  fullWidth\n                  value={formValues[item]}\n                  onChange={e => setFormValue({\n                    ...formValues, [item]: e.target.value\n                  })}\n                />\n              ))\n            }\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Отмена\n          </Button>\n          <Button disabled={isButtonDisabled(formValues)} type=\"submit\" onClick={handleClose} color=\"primary\">\n            Добавить\n          </Button>\n        </DialogActions>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nAddUser.propTypes = {\n  rows: PropTypes.array.isRequired,\n  addNewObj: PropTypes.func.isRequired,\n}\n\nexport default AddUser;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nimport CONSTANTS from '../utils/constants';\n\nconst CssTextField = withStyles({\n  root: {\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: CONSTANTS.SECONDARY_COLOR,\n      },\n      '&:hover fieldset': {\n        borderColor: CONSTANTS.SECONDARY_COLOR,\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: CONSTANTS.SECONDARY_COLOR,\n      },\n      '& .MuiInputBase-input': {\n        color: CONSTANTS.SECONDARY_COLOR,\n        padding: 10,\n      }\n    },\n  },\n})(TextField);\n\nfunction StyledTextField({value, onChange, label, fullWidth, margin }) {\n  return (\n    <CssTextField margin={margin} placeholder={label} fullWidth={fullWidth} value={value} variant=\"outlined\" onChange={e => onChange(e.target.value)}  />\n  );\n}\n\nStyledTextField.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  fullWIdth: PropTypes.bool,\n}\n\nStyledTextField.defaultProps = {\n  margin: 'dense'\n};\n\nexport default StyledTextField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nimport CONSTANTS from '../utils/constants'\n\nfunction ErrorMessage({children}) {\n  return(\n    <Typography style={{color: CONSTANTS.WARNING_COLOR, textAlign: 'center', margin: '50px 0'}}>\n      {children}\n    </Typography>\n  );\n}\n\nErrorMessage.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default ErrorMessage;","export default function (url, options, timeout = 30) {\n  return Promise.race([\n      fetch(url, options),\n      new Promise((_, reject) =>\n          setTimeout(() => reject(new Error('timeout')), timeout*1000)\n      )\n  ]);\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport {Table, TableRow,  TableBody, TableCell, TableContainer, TableHead, Paper, TablePagination, Typography} from '@material-ui/core';\nimport {ArrowDownward as ArrowDownwardIcon, Edit as EditIcon, Close as CloseIcon} from '@material-ui/icons';\n\nimport SelectedUserCard from './UserCard';\nimport LoadingIndicator from './LoadingIndicator';\nimport AddUser from './AddUser';\nimport MyTextField from './TextField';\nimport ErrorMessage from './ErrorMessage';\n\nimport CONSTANTS from '../utils/constants'\nimport FetchWithTimeOut from '../utils/FetchWithTimeOut';\n\nconst maxPaginationCount = 50;\nconst perPageNavigationCount = 10;\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst headRows = [\n  'id', 'firstName', 'lastName', 'email', 'phone'\n];\n\nconst paginateData = (data, pagValue, pageNumber) => {\n return data.filter( (item, id) => id < pagValue  * (pageNumber + 1) && id >= pagValue  * (pageNumber));\n}\n\nconst createPaginationBreakpoints = (data, per) => {\n  let dataLength = data.length;\n  let pointer = per;\n  let paginationBreakpoints = [];\n\n  while (dataLength > per && pointer <= maxPaginationCount) {\n    paginationBreakpoints.push(pointer);\n    pointer += per;\n    dataLength -= per;\n  }\n\n  return paginationBreakpoints;\n}\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nconst filterData = (data, filterOptions) => {\n  return data.filter( item => item[filterOptions.key].toString().toUpperCase().indexOf(filterOptions.value.toUpperCase()) !== -1);\n}\n\nconst sortData = (data, sortOptions, filterOptions) => {\n  const transformedData = filterOptions && filterOptions.key !== '' ? filterData(data, filterOptions).map((el, index) => [el, index]): data.map((el, index) => [el, index]);\n\n  const res = transformedData.sort( (a, b) => {\n    return sortOptions.rule === CONSTANTS.DESC ? desc(a[0], b[0], sortOptions.key) : -desc(a[0], b[0], sortOptions.key);\n  });\n\n  return res.map(el => el[0]);\n}\n\nconst getAnotherSortRule = (lastRule) => {\n  if (lastRule === CONSTANTS.DESC) return CONSTANTS.ASC;\n  return CONSTANTS.DESC;\n}\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: CONSTANTS.SECONDARY_COLOR,\n  },\n  body: {\n    fontSize: 14,\n    backgroundColor: theme.palette.common.black,\n    color: CONSTANTS.SECONDARY_COLOR,\n  },\n}))(TableCell);\n\n\nfunction CreateTable({source}) {\n  const classes = useStyles();\n  const [error, setError] = React.useState('');\n  const [filterInputs, setFilterInputs] = React.useState({id: '', value: ''})\n  const [data, setData] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [selectedTableObj, setSelectedTableObj] = React.useState(false);\n  const [paginationCount, setPaginationCount] = React.useState(perPageNavigationCount);\n  const [paginationPage, setPaginationPage] = React.useState(0);\n  const [sortOptions, setSortOptions] = React.useState({\n    key: '',\n    rule: CONSTANTS.DESC\n  });\n\n  const fetchData = async (source) => {\n    try {\n      setIsLoading(true);\n      const fetchResponse = await FetchWithTimeOut(source, {}, CONSTANTS.MAX_TIMEOUT_SECONDS);\n\n      if (fetchResponse.ok) {\n        return setData(await fetchResponse.json());\n      } else {\n        setError('К сожалению, произошла ошибка при загрузке данных для таблицы. Повторите, пожалуйста, позже')\n      }\n    } catch(e) {\n      if (e.message === 'timeout') return setError('К сожалению, время ожидания загрузки окончена. Попробуйте, пожалуйста, позже');\n\n      if (e.message === 'Failed to fetch') return setError('Не удается выполнить запрос к серверу. Возможно, проблема связана с вашим подключением');\n\n      return setError('Произошла ошибка. Повторите, пожалуйста, позже')\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const addNewObj = (data, newObj) => {\n    let lastData = data.slice();\n    lastData.unshift(newObj);\n\n    return setData(lastData);\n  }\n\n  React.useEffect(() => {\n    fetchData(source);\n  }, [source]);\n  \n  return (\n    <div style={{padding: 20, maxWidth: 1440,  margin: '0 auto'}}>\n      <TableContainer style={{backgroundColor: CONSTANTS.PRIMARY_COLOR, color: CONSTANTS.SECONDARY_COLOR}} component={Paper}>\n        <div style={{display: 'flex', paddingBottom: 10, maxHeight: 50, alignItems: 'center', justifyContent: 'space-between'}}>\n          <Typography variant=\"h5\">Таблица данных</Typography>\n          {data.length !== 0 && <AddUser rows={headRows} addNewObj={addNewObj.bind(this, data)} />}\n        </div>\n        {\n          isLoading ? <LoadingIndicator style={{marginTop: 100}} />\n          : <>\n              {\n                error ? <ErrorMessage style={{margin: '0 auto'}}>{error}</ErrorMessage>\n                : <>\n                    <Table className={classes.taisRequiredble} aria-label=\"simple table\">\n                      <TableHead>\n                        <TableRow>\n                          { headRows.map( (item, id) => <StyledTableCell key={item}> \n                                <div\n                                  style={{ display: 'flex', alignItems: 'center', justifyContent: id === 0 ? 'flex-start' : 'flex-end'}}\n                                >\n                                  {\n                                    filterInputs.id === item ? <>\n                                      <MyTextField value={filterInputs.value} onChange={value => setFilterInputs({...filterInputs, value})} label={item} />\n                                      <CloseIcon onClick={setFilterInputs.bind(this, {id: '', value: ''})} style={{fontSize: 16, cursor: 'pointer', marginLeft: 10}} />\n\n                                    </>\n                                    : <>\n                                    <div onClick={setSortOptions.bind(this, {key: item, rule: getAnotherSortRule(sortOptions.rule)})} style={{cursor: 'pointer', display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginRight: 15}}>\n                                      <ArrowDownwardIcon style={{marginRight: 5, display: item === sortOptions.key ? 'block' : 'none', transform: sortOptions.rule === CONSTANTS.DESC ? 'rotate(0deg)' : 'rotate(180deg)'}} />\n                                      {item}\n                                    </div>\n                                    <EditIcon onClick={setFilterInputs.bind(this, {value: '', id: item})} style={{fontSize: 16, cursor: 'pointer'}} />\n                                  </>\n                                  }\n                                </div>\n                              </StyledTableCell>\n                            )\n                          }\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                      {paginateData(sortData(data, sortOptions, {key: filterInputs.id, value: filterInputs.value}), paginationCount, paginationPage).map(row => (\n                        <TableRow onClick={setSelectedTableObj.bind(this, row)} style={{cursor: 'pointer'}} key={row.id + row.email}>\n                          <StyledTableCell component=\"th\" scope=\"row\">\n                            {row.id}\n                          </StyledTableCell>\n                          <StyledTableCell align=\"right\">{row.firstName}</StyledTableCell>\n                          <StyledTableCell align=\"right\">{row.lastName}</StyledTableCell>\n                          <StyledTableCell align=\"right\">{row.email}</StyledTableCell>\n                          <StyledTableCell align=\"right\">{row.phone}</StyledTableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                    </Table>\n\n                    <TablePagination\n                      style={{color: CONSTANTS.SECONDARY_COLOR}}\n                      rowsPerPageOptions={createPaginationBreakpoints(data, perPageNavigationCount)}\n                      component=\"div\"\n                      count={data.length}\n                      rowsPerPage={paginationCount}\n                      page={paginationPage}\n                      onChangePage={(e, newPage) => setPaginationPage(newPage)}\n                      onChangeRowsPerPage={(event) => setPaginationCount(event.target.value)}\n                    />\n                    <SelectedUserCard data={selectedTableObj} />\n                  </>\n              }\n          </>\n        }\n      </TableContainer>\n    </div>\n  );\n}\n\nCreateTable.propTypes = {\n  source: PropTypes.string.isRequired\n}\n\nexport default CreateTable;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {CssBaseline, Container, Button, ButtonGroup} from '@material-ui/core';\n\nimport CONSTANTS from '../utils/constants';\n\nfunction InitialScreen({setSource}) {\n  const ulrs = {\n    small: CONSTANTS.SMALL_DATA_URL,\n    big: CONSTANTS.BIG_DATA_URL,\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container style={{textAlign: 'center'}}>\n        <h1 style={{fontSize: 50, marginBottom: 40}}>Добро пожаловать на сервис генераций таблиц</h1>\n        <h2 style={{fontSize: 20, marginBottom: 70}}>Выберите, пожалуйста, <span>данные</span> для создания таблицы:</h2>\n        <ButtonGroup style={{boxShadow: '1px 1px 1px -1px rgb(51, 76, 175), 1px 1px 4px 1px rgb(51, 76, 175), 6px 3px 15px 1px rgb(51, 76, 175)'}} size=\"large\" color=\"primary\" aria-label=\"large outlined primary button group\">\n          <Button onClick={setSource.bind(this, ulrs.small)} variant=\"outlined\">Small Data</Button>\n          <Button onClick={setSource.bind(this, ulrs.big)} variant=\"outlined\">\n            Big Data\n          </Button>\n        </ButtonGroup>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nInitialScreen.propTypes = {\n  setSource: PropTypes.func.isRequired,\n}\n\nexport default InitialScreen;","import React from 'react';\nimport { createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\nimport Table from './components/Table';\nimport InitialScreen from './components/InitialScreen';\n\nimport './App.css';\n\nconst THEME = createMuiTheme({\n  typography: {\n   \"fontFamily\": \"\\\"Montserrat\\\", sans-serif\",\n   \"fontSize\": 14,\n  }\n});\n\nfunction App() {\n  const [source, setSource] = React.useState('');\n\n  return (\n    <MuiThemeProvider theme={THEME}>\n      <div style={{paddingTop: 20, minHeight: '100vh', margin: '0 auto', color: 'yellow', backgroundColor: 'black'}}>\n        {source ? <Table source={source} />\n          : <InitialScreen setSource={setSource} />\n        }\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}